input_path: tests/test_data/gemini_sample_data.csv

preprocessors:

  - type: ColumnTransformerPreprocessor

    pipelines:

    - name: numeric
      steps:
      - name: imputer
        sklearn_module: sklearn.impute.SimpleImputer
        args:
          strategy: median
      - name: scaler
        sklearn_module: sklearn.preprocessing.StandardScaler
      columns:
        - Age
        - Income
        - Years_of_Experience

    - name : nominal
      steps:
      - name: imputer
        sklearn_module: sklearn.impute.SimpleImputer
        args:
          strategy: most_frequent
      - name: onehot
        sklearn_module: sklearn.preprocessing.OneHotEncoder
        args:
          handle_unknown: ignore
      columns:
        - Gender
        - City

    - name : ordinal
      steps:
      - name: imputer
        sklearn_module: sklearn.impute.SimpleImputer
        args:
          strategy: most_frequent
      - name: ordinal
        sklearn_module: sklearn.preprocessing.OrdinalEncoder
        args:
          categories:
            -
              - High School
              - Bachelor's
              - Master's
              - PhD
          handle_unknown: use_encoded_value
          unknown_value: !!python/name:numpy.nan
      columns:
        - Education

  - type: FeatureUnionPreprocessor

    pipelines:

    - name: numeric_featureunion
      steps:
      - name: robust_scaler
        sklearn_module: sklearn.preprocessing.RobustScaler
      - name: poly
        sklearn_module: sklearn.preprocessing.PolynomialFeatures
        args:
          include_bias: False
      columns:
        - Age
        - Income
        - Years_of_Experience

train_test_split:
  test_size: 0.2
  random_state: 42

model:
  module: sklearn.linear_model.LogisticRegression
  target: Purchased
  args:
    random_state: 42

evaluators:
  - type: LogisticEvaluator
    metrics:
      - accuracy_score
      - classification_report
      - roc_auc_score
